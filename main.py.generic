# Boris main.py plus printing ip address to screen on startup
import machine
import network
import utime
import gc
from sys import modules, exit
from settings import ssids, pw
import m5stack # m5stack imports input; from tuupola @ https://github.com/tuupola/micropython-m5stack

def reset():
    machine.reset()

def reload(mod):
    mod_name = mod.__name__
    del sys.modules[mod_name]
    gc.collect()
    return __import__(mod_name)

tft = m5stack.Display()
tft.font(tft.FONT_DejaVu18, fixedwidth=False)
tft.clear()
tft.text(5, 20, "Hello Steve \n")

print("")
print("Starting WiFi ...")
tft.text(5, tft.LASTY, "Starting WiFi ...\n")

sta_if = network.WLAN(network.STA_IF)

_ = sta_if.active(True)

ap_list = sta_if.scan()

for ap in ap_list:
    print("checking ap: {}".format(ap[0].decode()))
    for location,ssid in ssids.items():
        if ssid==ap[0].decode():
            print("location =",location)
            print("ssid =",ssid)
            break
    else:
        print("Did not find a known AP")
        tft.text(5, tft.LASTY, "Did not find a known AP\n")
        tft.deinit()
        exit()

with open('location', 'w') as f:
    f.write(location)

_ = sta_if.connect(ssid, pw)

tmo = 50
while not sta_if.isconnected():
    utime.sleep_ms(100)
    tmo -= 1
    if tmo == 0:
        break

if tmo > 0:
    ifcfg = sta_if.ifconfig()
    print("WiFi started, IP:", ifcfg[0])
    tft.text(5, tft.LASTY, "WiFi started successfully\n")
    tft.text(5, tft.LASTY, "IP address: {}\n".format(ifcfg[0]))
    utime.sleep_ms(500)

    rtc = machine.RTC()
    print("Synchronize time from NTP server ...")
    tft.text(5, tft.LASTY, "Sync time with NTP server ...\n")
    rtc.ntp_sync(server="hr.pool.ntp.org", tz="EST5EDT") # update once
    tmo = 100
    while not rtc.synced():
        utime.sleep_ms(100)
        tmo -= 1
        if tmo == 0:
            break

    if tmo > 0:
        utime.sleep_ms(200)
        print("Time set:", utime.strftime("%c"))
        tft.text(5, tft.LASTY, "{}\n".format(utime.strftime("%c")))
        print("start ftp and telnet")
        tft.text(5, tft.LASTY, "Starting FTP and Telnet ...\n")
        _ = network.ftp.start()
        _ = network.telnet.start()
        try:
            mdns = network.mDNS()
            _ = mdns.start("mPy","MicroPython with mDNS")
            _ = mdns.addService('_ftp', '_tcp', 21, "MicroPython", {"board": "ESP32", "service": "mPy FTP File transfer", "passive": "True"})
            _ = mdns.addService('_telnet', '_tcp', 23, "MicroPython", {"board": "ESP32", "service": "mPy Telnet REPL"})
            _ = mdns.addService('_http', '_tcp', 80, "MicroPython", {"board": "ESP32", "service": "mPy Web server"})
        except:
            print("mDNS not available")

# tft deinit necessary or scripts that use screen will not work
tft.deinit()

